/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.desktop.disciplina;

import java.awt.Component;
import java.awt.event.WindowEvent;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import model.pojo.Disciplina;
import view.desktop.TelaPrincipal;

/**
 *
 * @author Elias Júnior
 */
public class TelaEditarDisciplina extends javax.swing.JFrame {

    TelaPrincipal telaPrincipal;

    /**
     * Creates new form TelaEditarDisciplina
     */
    public TelaEditarDisciplina(TelaPrincipal telaPrincipal) {
        initComponents();
        this.carregarListaDisciplinas();
        this.togglePainelDadosDisciplina(false);
        this.telaPrincipal = telaPrincipal;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PainelEditarDisciplina = new javax.swing.JPanel();
        DisciplinaLabel = new javax.swing.JLabel();
        SelectButton = new javax.swing.JButton();
        DisciplinaValue = new javax.swing.JComboBox();
        PainelDadosDisciplina = new javax.swing.JPanel();
        NomeLabel = new javax.swing.JLabel();
        EmentaLabel = new javax.swing.JLabel();
        CargaHorariaLabel = new javax.swing.JLabel();
        NomeValue = new javax.swing.JTextField();
        EmentaValue = new javax.swing.JTextField();
        CargaHorariaValue = new javax.swing.JTextField();
        SalvarButton = new javax.swing.JButton();
        IdLabel = new javax.swing.JLabel();
        IdValue = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        PainelEditarDisciplina.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Editar disciplina", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        DisciplinaLabel.setText("Disciplina:");

        SelectButton.setText("Selecionar");
        SelectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectButtonActionPerformed(evt);
            }
        });

        PainelDadosDisciplina.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados da disciplina", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        NomeLabel.setText("Nome:");

        EmentaLabel.setText("Ementa:");

        CargaHorariaLabel.setText("Carga horária:");

        SalvarButton.setText("Salvar");
        SalvarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalvarButtonActionPerformed(evt);
            }
        });

        IdLabel.setText("ID:");

        javax.swing.GroupLayout PainelDadosDisciplinaLayout = new javax.swing.GroupLayout(PainelDadosDisciplina);
        PainelDadosDisciplina.setLayout(PainelDadosDisciplinaLayout);
        PainelDadosDisciplinaLayout.setHorizontalGroup(
            PainelDadosDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelDadosDisciplinaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelDadosDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelDadosDisciplinaLayout.createSequentialGroup()
                        .addComponent(NomeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(NomeValue))
                    .addGroup(PainelDadosDisciplinaLayout.createSequentialGroup()
                        .addComponent(CargaHorariaLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CargaHorariaValue))
                    .addGroup(PainelDadosDisciplinaLayout.createSequentialGroup()
                        .addComponent(EmentaLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(EmentaValue))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelDadosDisciplinaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(SalvarButton))
                    .addGroup(PainelDadosDisciplinaLayout.createSequentialGroup()
                        .addComponent(IdLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(IdValue)))
                .addContainerGap())
        );
        PainelDadosDisciplinaLayout.setVerticalGroup(
            PainelDadosDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelDadosDisciplinaLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(PainelDadosDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IdLabel)
                    .addComponent(IdValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelDadosDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NomeLabel)
                    .addComponent(NomeValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelDadosDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EmentaLabel)
                    .addComponent(EmentaValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelDadosDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CargaHorariaLabel)
                    .addComponent(CargaHorariaValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SalvarButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PainelEditarDisciplinaLayout = new javax.swing.GroupLayout(PainelEditarDisciplina);
        PainelEditarDisciplina.setLayout(PainelEditarDisciplinaLayout);
        PainelEditarDisciplinaLayout.setHorizontalGroup(
            PainelEditarDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelEditarDisciplinaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelEditarDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PainelDadosDisciplina, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(PainelEditarDisciplinaLayout.createSequentialGroup()
                        .addComponent(DisciplinaLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DisciplinaValue, 0, 200, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SelectButton)))
                .addContainerGap())
        );
        PainelEditarDisciplinaLayout.setVerticalGroup(
            PainelEditarDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelEditarDisciplinaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelEditarDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DisciplinaLabel)
                    .addComponent(SelectButton)
                    .addComponent(DisciplinaValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PainelDadosDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PainelEditarDisciplina, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PainelEditarDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (this.telaPrincipal != null) {
            this.telaPrincipal.setInitData();
            this.telaPrincipal.setVisible(true);
        }
    }//GEN-LAST:event_formWindowClosing

    private void SelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectButtonActionPerformed
        String disciplinaStr = (String) this.DisciplinaValue.getSelectedItem();
        if (disciplinaStr == null) {
            JOptionPane.showMessageDialog(this, "Você deve selecionar uma disciplina antes.");
        } else {
            long disciplinaId = Long.parseLong(disciplinaStr.split(":")[0]);
            Disciplina disciplina = TelaPrincipal.disciplinaDao.findDisciplina(disciplinaId);
            if (disciplina == null) {
                JOptionPane.showMessageDialog(this, "A disciplina selecionada não foi encontrada.");
            } else {
                this.carregarPainelDisciplina(disciplina);
                this.togglePainelDadosDisciplina(true);
            }
        }
    }//GEN-LAST:event_SelectButtonActionPerformed

    private void SalvarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalvarButtonActionPerformed
        try {
            long id = Long.parseLong(this.IdValue.getText());
            long cargaHoraria = Long.parseLong(this.CargaHorariaValue.getText());
            String nome = this.NomeValue.getText();
            String ementa = this.EmentaValue.getText();
            Disciplina disciplina = TelaPrincipal.disciplinaDao.findDisciplina(id);
            if (disciplina == null) {
                JOptionPane.showMessageDialog(this, "Não foi possível encontrar essa disciplina.");
            } else {
                disciplina.setNome(nome);
                disciplina.setEmenta(ementa);
                disciplina.setCargaHoraria(cargaHoraria);
                TelaPrincipal.disciplinaDao.edit(disciplina);
                this.togglePainelDadosDisciplina(false);
                this.limparPainelDisciplina();
                this.carregarListaDisciplinas();
                JOptionPane.showMessageDialog(this, "Disciplina alterada com sucesso.");
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Há um erro no formato numérico dos campos.");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_SalvarButtonActionPerformed

    private void carregarPainelDisciplina(Disciplina disciplina) {
        this.IdValue.setText(String.valueOf(disciplina.getId()));
        this.NomeValue.setText(disciplina.getNome());
        this.CargaHorariaValue.setText(String.valueOf(disciplina.getCargaHoraria()));
        this.EmentaValue.setText(disciplina.getEmenta());
    }

    private void limparPainelDisciplina() {
        this.IdValue.setText("");
        this.NomeValue.setText("");
        this.CargaHorariaValue.setText("");
        this.EmentaValue.setText("");
    }

    private void closeFrame() {
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        this.dispose();
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSED));
    }

    private void togglePainelDadosDisciplina(boolean status) {
        Component[] fields = this.PainelDadosDisciplina.getComponents();
        for (Component field : fields) {
            field.setEnabled(status);
        }
        this.IdValue.setEnabled(false);
    }

    private void carregarListaDisciplinas() {
        this.DisciplinaValue.removeAllItems();
        List<Disciplina> disciplinas = TelaPrincipal.disciplinaDao.findDisciplinaEntities();
        DefaultComboBoxModel comboBoxDisciplinas = new javax.swing.DefaultComboBoxModel();
        disciplinas.forEach((d) -> {
            String nome = d.getId() + ": " + d.getNome();
            comboBoxDisciplinas.addElement(nome);
        });
        this.DisciplinaValue.setModel(comboBoxDisciplinas);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CargaHorariaLabel;
    private javax.swing.JTextField CargaHorariaValue;
    private javax.swing.JLabel DisciplinaLabel;
    private javax.swing.JComboBox DisciplinaValue;
    private javax.swing.JLabel EmentaLabel;
    private javax.swing.JTextField EmentaValue;
    private javax.swing.JLabel IdLabel;
    private javax.swing.JTextField IdValue;
    private javax.swing.JLabel NomeLabel;
    private javax.swing.JTextField NomeValue;
    private javax.swing.JPanel PainelDadosDisciplina;
    private javax.swing.JPanel PainelEditarDisciplina;
    private javax.swing.JButton SalvarButton;
    private javax.swing.JButton SelectButton;
    // End of variables declaration//GEN-END:variables
}
