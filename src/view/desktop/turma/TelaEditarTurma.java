/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.desktop.turma;

import java.awt.Component;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.pojo.Aluno;
import model.pojo.Disciplina;
import model.pojo.Professor;
import model.pojo.Turma;
import view.desktop.TelaPrincipal;

/**
 *
 * @author Elias Júnior
 */
public class TelaEditarTurma extends javax.swing.JFrame {

    private TelaPrincipal telaPrincipal;
    private Turma turma;

    /**
     * Creates new form TelaEditarTurma
     */
    public TelaEditarTurma(TelaPrincipal telaPrincipal) {
        initComponents();
        this.carregarListaTurmas();
        this.carregarListaProfessores();
        this.carregarListaDisciplinas();
        this.carregarListaAlunos();
        this.toggleEditarPanel(false);
        this.telaPrincipal = telaPrincipal;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PainelEditarTurma = new javax.swing.JPanel();
        TurmaLabel = new javax.swing.JLabel();
        EditarButton = new javax.swing.JButton();
        ListaTurmas = new javax.swing.JComboBox();
        PainelEditar = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        ListaAlunos = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListaAlunosTable = new javax.swing.JTable();
        SalvarButton = new javax.swing.JToggleButton();
        AdicionarButton = new javax.swing.JButton();
        AnoValue = new javax.swing.JTextField();
        PeriodoValue = new javax.swing.JTextField();
        LocalValue = new javax.swing.JTextField();
        VagasValue = new javax.swing.JTextField();
        HorarioValue = new javax.swing.JTextField();
        ListaProfessores = new javax.swing.JComboBox();
        ListaDisciplinas = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        PainelEditarTurma.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Editar turma", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        TurmaLabel.setText("Turma:");

        EditarButton.setText("Editar");
        EditarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarButtonActionPerformed(evt);
            }
        });

        /*
        */

        PainelEditar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Editar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel1.setText("Ano:");

        jLabel2.setText("Período:");

        jLabel3.setText("Local:");

        jLabel4.setText("Número de vagas:");

        jLabel5.setText("Horário:");

        jLabel6.setText("Professor:");

        jLabel7.setText("Disciplina:");

        jLabel8.setText("Alunos:");

        /*
        */
        ListaAlunos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListaAlunosActionPerformed(evt);
            }
        });

        /*
        */
        jScrollPane1.setViewportView(ListaAlunosTable);

        SalvarButton.setText("Salvar");
        SalvarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalvarButtonActionPerformed(evt);
            }
        });

        AdicionarButton.setText("Adicionar");
        AdicionarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdicionarButtonActionPerformed(evt);
            }
        });

        /*
        */

        /*
        */

        javax.swing.GroupLayout PainelEditarLayout = new javax.swing.GroupLayout(PainelEditar);
        PainelEditar.setLayout(PainelEditarLayout);
        PainelEditarLayout.setHorizontalGroup(
            PainelEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelEditarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelEditarLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(SalvarButton))
                    .addGroup(PainelEditarLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ListaAlunos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AdicionarButton))
                    .addGroup(PainelEditarLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AnoValue))
                    .addGroup(PainelEditarLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PeriodoValue))
                    .addGroup(PainelEditarLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(LocalValue))
                    .addGroup(PainelEditarLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(VagasValue))
                    .addGroup(PainelEditarLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(HorarioValue))
                    .addGroup(PainelEditarLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ListaProfessores, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(PainelEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PainelEditarLayout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(ListaDisciplinas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(PainelEditarLayout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
        PainelEditarLayout.setVerticalGroup(
            PainelEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelEditarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(AnoValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(PeriodoValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(LocalValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(VagasValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(HorarioValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(ListaProfessores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(ListaDisciplinas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(ListaAlunos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AdicionarButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SalvarButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PainelEditarTurmaLayout = new javax.swing.GroupLayout(PainelEditarTurma);
        PainelEditarTurma.setLayout(PainelEditarTurmaLayout);
        PainelEditarTurmaLayout.setHorizontalGroup(
            PainelEditarTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelEditarTurmaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelEditarTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PainelEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(PainelEditarTurmaLayout.createSequentialGroup()
                        .addComponent(TurmaLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ListaTurmas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(EditarButton)))
                .addContainerGap())
        );
        PainelEditarTurmaLayout.setVerticalGroup(
            PainelEditarTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelEditarTurmaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelEditarTurmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TurmaLabel)
                    .addComponent(ListaTurmas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EditarButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PainelEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PainelEditarTurma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PainelEditarTurma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (this.telaPrincipal != null) {
            this.telaPrincipal.setInitData();
            this.telaPrincipal.setVisible(true);
        }
    }//GEN-LAST:event_formWindowClosing

    private void ListaAlunosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListaAlunosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ListaAlunosActionPerformed

    private void EditarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarButtonActionPerformed
        String turmaStr = (String) this.ListaTurmas.getSelectedItem();
        if (turmaStr != null) {
            long id = Long.parseLong(turmaStr.split(":")[0]);
            this.turma = TelaPrincipal.turmaDao.findTurma(id);
            if (this.turma == null) {
                this.toggleEditarPanel(false);
                JOptionPane.showMessageDialog(this, "Não foi encontrado a turma selecionada.");
            } else {
                this.carregarEditTurma();
            }
        } else {
            this.toggleEditarPanel(false);
            JOptionPane.showMessageDialog(this, "Você precisa selecionar uma turma.");
        }
    }//GEN-LAST:event_EditarButtonActionPerformed

    private void AdicionarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdicionarButtonActionPerformed
        String alunoStr = (String) this.ListaAlunos.getSelectedItem();
        if (alunoStr != null) {
            long alunoId = Long.parseLong(alunoStr.split(":")[0]);
            Aluno aluno = TelaPrincipal.alunoDao.findAluno(alunoId);
            if (aluno == null) {
                JOptionPane.showMessageDialog(this, "O aluno não foi encontrado.");
            } else {
                try {
                    this.turma.addAluno(aluno);
                    this.carregarTabelaAlunos();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Você precisa selecionar um aluno.");
        }
    }//GEN-LAST:event_AdicionarButtonActionPerformed

    private void SalvarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalvarButtonActionPerformed
        if (turma != null) {
            try {
                this.turma.setAno(Long.parseLong(this.AnoValue.getText()));
                this.turma.setPeriodo(Long.parseLong(this.PeriodoValue.getText()));
                this.turma.setLocal(this.LocalValue.getText());
                this.turma.setNumVagas(Long.parseLong(this.VagasValue.getText()));
                this.turma.setHorario(this.HorarioValue.getText());
                Professor professor = this.getSelectedProfessor();
                Disciplina disciplina = this.getSelectedDisciplina();
                if (professor == null) {
                    JOptionPane.showMessageDialog(this, "Selecione um professor.");
                } else if (disciplina == null) {
                    JOptionPane.showMessageDialog(this, "Selecione uma disciplina.");
                } else if (!professor.getDisciplinasApto().contains(disciplina)) {
                    JOptionPane.showMessageDialog(this, "Este professor não está apto a lecionar essa disciplina.");
                } else {
                    this.turma.setProfessor(professor);
                    this.turma.setDisciplinas(disciplina);
                    TelaPrincipal.turmaDao.edit(this.turma);
                    JOptionPane.showMessageDialog(this, "Turma editada.");
                    this.carregarListaTurmas();
                    this.toggleEditarPanel(false);
                    this.turma = null;
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Erro no formato numérico.");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
                Logger.getLogger(TelaEditarTurma.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_SalvarButtonActionPerformed

    private Professor getSelectedProfessor() {
        String idStr = (String) this.ListaProfessores.getSelectedItem();
        if (idStr == null) {
            return null;
        } else {
            long id = Long.parseLong(idStr.split(":")[0]);
            Professor professor = TelaPrincipal.professorDao.findProfessor(id);
            return professor;
        }
    }

    private Disciplina getSelectedDisciplina() {
        String idStr = (String) this.ListaDisciplinas.getSelectedItem();
        if (idStr == null) {
            return null;
        } else {
            long id = Long.parseLong(idStr.split(":")[0]);
            Disciplina disciplina = TelaPrincipal.disciplinaDao.findDisciplina(id);
            return disciplina;
        }
    }

    private void carregarEditTurma() {
        this.toggleEditarPanel(true);
        this.AnoValue.setText(String.valueOf(this.turma.getAno()));
        this.HorarioValue.setText(String.valueOf(this.turma.getHorario()));
        this.LocalValue.setText(this.turma.getLocal());
        this.PeriodoValue.setText(String.valueOf(this.turma.getPeriodo()));
        this.VagasValue.setText(String.valueOf(this.turma.getNumVagas()));
        String professorStr = this.turma.getProfessor().getId() + ": " + this.turma.getProfessor().getNome();
        this.ListaProfessores.setSelectedItem(professorStr);
        Disciplina disciplina = this.turma.getDisciplina();
        String disciplinaStr = disciplina.getId() + ": " + disciplina.getNome();
        this.ListaDisciplinas.setSelectedItem(disciplinaStr);
        this.carregarTabelaAlunos();
    }

    private void carregarListaTurmas() {
        List<Turma> turmas = TelaPrincipal.turmaDao.findTurmaEntities();
        this.ListaTurmas.removeAllItems();
        turmas.forEach((Turma t) -> {
            String nome = t.getId() + ": " + t.getProfessor().getNome() + " - " + t.getDisciplina().getNome();
            this.ListaTurmas.addItem(nome);
        });
    }

    private void carregarListaProfessores() {
        List<Professor> professores = TelaPrincipal.professorDao.findProfessorEntities();
        this.ListaProfessores.removeAllItems();
        professores.forEach((Professor p) -> {
            String nome = p.getId() + ": " + p.getNome();
            this.ListaProfessores.addItem(nome);
        });
    }

    private void carregarListaDisciplinas() {
        List<Disciplina> disciplinas = TelaPrincipal.disciplinaDao.findDisciplinaEntities();
        this.ListaDisciplinas.removeAllItems();
        disciplinas.forEach((Disciplina d) -> {
            String nome = d.getId() + ": " + d.getNome();
            this.ListaDisciplinas.addItem(nome);
        });
    }

    private void carregarListaAlunos() {
        List<Aluno> alunos = TelaPrincipal.alunoDao.findAlunoEntities();
        this.ListaAlunos.removeAllItems();
        alunos.forEach((Aluno a) -> {
            String nome = a.getId() + ": " + a.getNome();
            this.ListaAlunos.addItem(nome);
        });
    }

    private void carregarTabelaAlunos() {
        DefaultTableModel dtm = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        dtm.setColumnIdentifiers(new Object[]{"ID", "Nome", "Matrícula", "CPF"});
        if (this.turma != null) {
            this.turma.getAlunos().forEach((Aluno a) -> {
                dtm.addRow(new Object[]{a.getId(), a.getNome(), a.getMatricula(), a.getCpf()});
            });
        }
        this.ListaAlunosTable.setModel(dtm);
    }

    private void toggleEditarPanel(boolean status) {
        Component[] fields = this.PainelEditar.getComponents();
        for (Component field : fields) {
            field.setEnabled(status);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AdicionarButton;
    private javax.swing.JTextField AnoValue;
    private javax.swing.JButton EditarButton;
    private javax.swing.JTextField HorarioValue;
    private javax.swing.JComboBox ListaAlunos;
    private javax.swing.JTable ListaAlunosTable;
    private javax.swing.JComboBox ListaDisciplinas;
    private javax.swing.JComboBox ListaProfessores;
    private javax.swing.JComboBox ListaTurmas;
    private javax.swing.JTextField LocalValue;
    private javax.swing.JPanel PainelEditar;
    private javax.swing.JPanel PainelEditarTurma;
    private javax.swing.JTextField PeriodoValue;
    private javax.swing.JToggleButton SalvarButton;
    private javax.swing.JLabel TurmaLabel;
    private javax.swing.JTextField VagasValue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
