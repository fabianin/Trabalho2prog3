/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.desktop.consultas;

import java.util.List;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import model.pojo.Disciplina;
import model.pojo.Turma;
import view.desktop.TelaPrincipal;

/**
 *
 * @author Elias Júnior
 */
public class TelaConsultarTurmasOferecidas extends javax.swing.JFrame {

    private TelaPrincipal telaPrincipal;

    /**
     * Creates new form TelaConsultarTurmasOferecidas
     */
    public TelaConsultarTurmasOferecidas(TelaPrincipal telaPrincipal) {
        initComponents();
        this.telaPrincipal = telaPrincipal;
        this.carregaDisciplinas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PainelConsulta = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ListaDisciplinas = new javax.swing.JComboBox();
        ConsultarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        PainelConsulta.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Consulta ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        jLabel1.setText("Disciplina:");

        /*
        ListaDisciplinas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        */

        ConsultarButton.setText("Consultar");
        ConsultarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PainelConsultaLayout = new javax.swing.GroupLayout(PainelConsulta);
        PainelConsulta.setLayout(PainelConsultaLayout);
        PainelConsultaLayout.setHorizontalGroup(
            PainelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelConsultaLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ListaDisciplinas, 0, 291, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelConsultaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ConsultarButton)))
                .addContainerGap())
        );
        PainelConsultaLayout.setVerticalGroup(
            PainelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ListaDisciplinas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ConsultarButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PainelConsulta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PainelConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (this.telaPrincipal != null) {
            this.telaPrincipal.setInitData();
            this.telaPrincipal.setVisible(true);
        }
    }//GEN-LAST:event_formWindowClosing

    private void ConsultarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultarButtonActionPerformed
        String idStr = (String) this.ListaDisciplinas.getSelectedItem();
        if (idStr == null) {
            JOptionPane.showMessageDialog(this, "Você deve selecionar uma disciplina.");
        } else {
            long id = Long.parseLong(idStr.split(":")[0]);
            Disciplina disciplina = TelaPrincipal.disciplinaDao.findDisciplina(id);
            if (disciplina == null) {
                JOptionPane.showMessageDialog(this, "A disciplina não foi encontrada.");
            } else {
                List<Turma> turmas = TelaPrincipal.turmaDao.findTurmaEntities().stream().filter((Turma t) -> {
                    return t.getDisciplina().equals(disciplina);
                }).collect(Collectors.toList());
                if (turmas.size() == 0) {
                    JOptionPane.showMessageDialog(this, "Não foi ofertado em nenhuma turma.");
                } else {
                    JOptionPane.showMessageDialog(this, "Essa disciplina foi ofertada " + turmas.size() + " vezes.");
                }
            }
        }
    }//GEN-LAST:event_ConsultarButtonActionPerformed

    private void carregaDisciplinas() {
        List<Disciplina> disciplinas = TelaPrincipal.disciplinaDao.findDisciplinaEntities();
        disciplinas.forEach((Disciplina d) -> {
            String nome = d.getId() + ": " + d.getNome();
            this.ListaDisciplinas.addItem(nome);
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ConsultarButton;
    private javax.swing.JComboBox ListaDisciplinas;
    private javax.swing.JPanel PainelConsulta;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
